{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Create Chat Completion Request",
  "type": "object",
  "properties": {
    "model": {
      "type": "string",
      "description": "The model to generate the completion."
    },
    "messages": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "role": {
            "type": "string",
            "description": "The role of the message's author (system, user, or assistant).",
            "enum": ["system", "user", "assistant"]
          },
          "content": {
            "type": ["string", "null"],
            "description": "The contents of the message."
          }
        },
        "required": ["role", "content"]
      },
      "description": "A list of messages comprising the conversation so far.",
      "minItems": 1
    },
    "system_fingerprint": {
      "type": "string",
      "description": "This fingerprint represents the backend configuration that the model runs with."
    },
    "function_call": {
      "type": ["object", "null"],
      "properties": {
        "name": {
          "type": "string",
          "description": "DEPRECATED: The name of the function to call. Replaced by tool_choice."
        },
        "arguments": {
          "type": "object",
          "additionalProperties": true,
          "description": "DEPRECATED: The arguments to call the function with as generated by the model. Replaced by tools.configuration."
        }
      },
      "required": ["name"],
      "deprecated": true,
      "description": "DEPRECATED and replaced by tool_calls. The name and arguments of a function to be called as generated by the model."
    },
    "functions": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "DEPRECATED: The name of the function. Replaced by tools."
          },
          "parameters": {
            "type": "object",
            "additionalProperties": true,
            "description": "DEPRECATED: The parameters the function accepts, described as a JSON Schema object. Replaced by tools.configuration."
          },
          "return_type": {
            "type": "string",
            "description": "DEPRECATED: The return type of the function. Replaced by tools.output."
          }
        },
        "required": ["name", "parameters", "return_type"],
        "deprecated": true,
        "description": "DEPRECATED: The function that the model may call including name, parameters, and return type. Replaced by the properties within tools."
      },
      "deprecated": true,
      "description": "DEPRECATED and replaced by tools. Functions that the model may call during the conversation."
    },
    "tool_choice": {
      "description": "Controls which (if any) function is called by the model.",
      "oneOf": [
        {
          "type": "string",
          "enum": ["none", "auto"]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": ["function"],
              "description": "The type of the tool."
            },
            "function": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the function to call."
                }
              },
              "required": ["name"]
            }
          }
        }
      ]
    },
    "tools": {
      "type": "array",
      "description": "A list of tools the model may call.",
      "items": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["function"],
            "description": "The type of the tool."
          },
          "function": {
            "type": "object",
            "properties": {
              "description": {
                "type": "string",
                "description": "A description of what the function does."
              },
              "name": {
                "type": "string",
                "description": "The name of the function to be called."
              },
              "parameters": {
                "type": "object",
                "additionalProperties": true,
                "description": "The parameters the functions accept described as a JSON Schema object."
              },
              "return_type": {
                "type": "string",
                "description": "The type of value the function returns."
              }
            },
            "required": ["name", "parameters", "return_type"]
          }
        },
        "required": ["type", "function"]
      }
    },
    "usage": {
      "type": "object",
      "properties": {
        "prompt_tokens": {
          "type": "integer",
          "description": "Number of tokens in the prompt."
        },
        "completion_tokens": {
          "type": "integer",
          "description": "Number of tokens in the generated completion."
        },
        "total_tokens": {
          "type": "integer",
          "description": "Total number of tokens used in the request (prompt + completion)."
        }
      },
      "required": ["prompt_tokens", "completion_tokens", "total_tokens"],
      "description": "Usage statistics for the completion request."
    }
  },
  "required": ["model", "messages"]
}
